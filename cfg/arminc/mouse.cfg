// Mouse sensitivity.
// Default: 6.0
//
// Recommended mouse settings value:
// DPI(cpi) = 400
// Polling rate: 1000(hz)
//
// >> New sensitivity = (current DPI * current sensitivity) / new DPI
sensitivity "1.9"

// Additional mouse sensitivity scale factor applied when FOV is zoomed in.
// Default: 1
//
// Sensitivity is lowered according to how much the field of view (FOV) gets narrowed by a weapon's script. 
// The value '0.82' makes the flick accurately over smaller, more realistic distances.
// The value '1.0' makes the flick accurately over huge distances.
zoom_sensitivity_ratio_mouse "0.82"

// Use raw input for mouse input.
// Default: 1
//
// The raw input model allows an application to directly integrate and communicate with a 
// hardware device without the need for detection, post-processing or filtering.
m_rawinput "1"

// Custom mouse acceleration.
// Default: 3
//
// 0: Custom acceleration disabled.
// 1: mouse_acceleration = min(m_customaccel_max, pow(raw_mouse_delta, m_customaccel_exponent) * m_customaccel_scale + sensitivity).
// 2: Same as 1, but x and y sensitivity are scaled by m_pitch and m_yaw respectively.
// 3: mouse_acceleration = pow(raw_mouse_delta, m_customaccel_exponent - 1) * sensitivity.
m_customaccel "0"

// Mouse move is raised to this power before being scaled by the scale factor.
// Default: 1.05
m_customaccel_exponent "0"

// Max mouse move scale factor.
// Default: 0
m_customaccel_max "0"

// Custom mouse acceleration value.
// Default: 0.04
m_customaccel_scale "0"

// Windows mouse acceleration initial threshold (2x movement).
// Default: 0 
m_mouseaccel1 "0"

// Windows mouse acceleration secondary threshold (4x movement).
// Default: 0 
m_mouseaccel2 "0"

// Windows mouse acceleration.
// Default: 1
m_mousespeed "0"

// Mouse pitch factor. 
// Default: 0.022
//
// Vertical speed sensitivity multiplier.
m_pitch "0.022"

// Mouse yaw factor speed sensitivity multiplier.
// Default: 0.022
//
// Horizontal speed sensitivity multiplier.
//
// Doing an equal mouse movement between the two aspect ratios will grant the exact same turn in degrees as each other,
// but the 4:3 will feel much different because that turn, which is exactly the same as the one on 16:9, 
// takes up a larger portion of the smaller FOV, thus making it seem like the cursor is moving faster and farther than it actually is. 
// <*> So, by default changing the yaw setting, will not fix the problem, that isn't actually there.
m_yaw "0.022"