// Scales HUD elements.
// Default: 0.85
hud_scaling "0.95"

// Sets the alpha of the background on HUD elements.
// Default: 0.5
cl_hud_background_alpha "0.7"

// Sets the color of HUD elements.
// Default: 0
//
// 0: Default
// 1: White
// 2: Light Blue
// 3: Blue
// 4: Purple
// 5: Red
// 6: Orange
// 7: Yellow
// 8: Green
// 9: Aqua
// 10: Pink
cl_hud_color "8"

// Preferred teammate color.
// Default: 0
cl_color "0"

// Hides HUD elements like health/armor bars and firerate in ammo.
// Default: 0
cl_hud_healthammo_style "1"

// Determines how to display players at the HUD.
// Default: 0
//
// 0 = Show player avatars.
// 1 = Show count of living players on the team (no avatars).
cl_hud_playercount_showcount "1"

// Displays the player count HUD element on the bottom of the screen.
// Default: 0
//
// 0: Top
// 1: Bottom
cl_hud_playercount_pos "0"

// Enables the display of target names.
// Default: 1
//
// If cl_crosshairstyle is '1' or '0' this regulates the crosshair turning red when aiming at enemies and the circle with the X when pointing on teammates.
hud_showtargetid "1"

// Sets the scale of the radar HUD element.
// Default: 1
//
// Adjusts the size of the radar relative to other HUD elements.
cl_hud_radar_scale "1"

// Sets the scale of the radar interior display.
// Default: 0.7
//
// Map Zoom impacts the amount of the map that is visible on the radar.
cl_radar_scale "0.4"

// Sets the minimum icon scale.
// Default: 0.6
cl_radar_icon_scale_min "0.7"

// The radar is maximally used. Otherwise the player is always centered, even at map extents. client
// Default: 1
cl_radar_always_centered "0"

// Rotates the radar in the direction the player is facing.
// Default: 1
//
// Toggles between a radar that rotates and a radar with a fixed orientation.
cl_radar_rotate "1"

// The radar will toggle to a square when the scoreboard is visible.
// Default: 1
// 
// The radar will toggle to square and display the whole map when the scoreboard is visible.
cl_radar_square_with_scoreboard "0"

// Show C4 symbol below radar, additional to your inventory.
// Default: 1
cl_hud_bomb_under_radar "1"

// For drawing only the crosshair and death notices (used for moviemaking).
// Default: 0
//
// Can be used for custom hud, moviemaking or it can improve the frame rate.
cl_draw_only_deathnotices "0"

// The clan name will show next to player names in the death notices.
// Default: 1
cl_show_clan_in_death_notice "0"

// Force draw radar.
// Default: 0
//
// -1: Force no radar.
//  0: Disabled
//  1: Draw radar even if hud disabled.
cl_drawhud_force_radar "0"

// Force draw deathnotices.
// Default: 0
//
// -1: Force no deathnotices.
//  0: Disabled  
//  1: Draw deathnotices even if hud disabled.
cl_drawhud_force_deathnotices "0"

// Always show team id over teammates.
// Default: 0
//
// 1: Pips (through walls)
// 2: Pips, name, and equipment (permanent).
cl_teamid_overhead_always "1"

// Set how the radar players circle look.
// Default: 1
//
// 0: Show teammates as same colors.
// 1: Show teammates as separate colors.
// 2: Show teamamtes as separate colors and first letter of color (for color blind peoples).
cl_teammate_colors_show "1"

// Display the current loadout.
// Default: 1
//
// 0: Hides after a short period.
// 1: Always visible.
cl_showloadout "1"

// Draws current position at the top of the screen.
// Default: 0
cl_showpos "0"

// Draws fps meter.
// Default: 0
//
// 0: Disabled
// 1: FPS
// 2: Smooth
// 3: Server
// 4: Show & Log to file.
// 5: Thread and wait times.
cl_showfps "0"

// Enables right-handed viewmodels.
// Default: 1
cl_righthand "1"

// Viewmodel Position
// Default: 1
//
// 1: Desktop = viewmodel_fov '60'; viewmodel_offset_x '1';   viewmodel_offset_y '1'; viewmodel_offset_z '-1'
// 2: Couch   = viewmodel_fov '54'; viewmodel_offset_x '0';   viewmodel_offset_y '0'; viewmodel_offset_z '0'
// 3: Classic = viewmodel_fov '68'; viewmodel_offset_x '2.5'; viewmodel_offset_y '0'; viewmodel_offset_z '-1.5'
//
// You can mix the following 4 commands, or disable all of them (comment at the beginning) if you wana use the presetposition.
// If you use the ALL 4 commands below (FOV, X, Y, Z), they will overlap presetpos, making it having no effect in final, 
// consequently the value 0 (that trigger some errors in console) isn't needed.
viewmodel_presetpos "3"

// Set how much of viewmodel is visible overall.
// Default: 54
// viewmodel_fov "68"

// Determines the X axis of the viewmodel.
// Default: 0
//
// Higher values = further away from the screen center.
// viewmodel_offset_x "2.5"

// Determines the Y axis of the viewmodel.
// Default: 0
//
// Higher values = further away from player.
// viewmodel_offset_y "0"

// Determines the Z axis of the viewmodel.
// Default: 0
//
// Higher values = higher weapon holding position.
viewmodel_offset_z "-2"

// Weapon viewmodels reacts to weapon recoil & aimpunch.
// Default: 0
viewmodel_recoil "0"

// The amount the viewmodel lowers when running.
// Default: 21
cl_bob_lower_amt "5"

// The amount the viewmodel moves side to side when running.
// Default: 0.4
//
// Also affects the scope.
cl_bobamt_lat "0.1"

// The amount the viewmodel moves up and down when running.
// Default: 0.4
//
// Also affects the scope.
cl_bobamt_vert "0.1"

// The frequency at which the viewmodel bobs.
// Default: 0.98
//
// Is enforced to value '0.98' on official servers and third-party competitive gaming platforms.
cl_bobcycle "0.98"

// The amount the viewmodel shifts to the left when shooting accuracy increases.
// Default: 1.5
cl_viewmodel_shift_left_amt "0.5"

// The amount the viewmodel shifts to the right when shooting accuracy decreases.
// Default: 0.75
cl_viewmodel_shift_right_amt "0.25"

// Show stats screen in spectator view.
// Default: 1
cl_spec_stats "1"

// Toggle the visibility of scoreboard players.
// Default: 0
spec_hide_players "0"

// Toggle the visibility of the spectator bindings.
// Default: 1
cl_spec_show_bindings "1"

// Map voting and spectator view use the raw number keys instead of the weapon binds (slot1, slot2, etc).
// Default: 1
spec_usenumberkeys_nobinds "1"

// Sets the key used to follow grenades thrown by a player.
// Default: 0
// 0: LALT
// 1: LSHIFT
// 2: +reload
cl_spec_follow_grenade_key "2"

// Enables interpolation between observer targets.
// Default: 1
//
// Enable smooth transition.
cl_obs_interp_enable "1"

// Freezecam on client, after death.
// Default: 0
cl_disablefreezecam "1"

// Freezecam's kill panel dynamic Y movement.
// Default: 1
cl_freezecampanel_position_dynamic "1"

// Auto-start Killer Replay when available.
// Default: 1
spec_replay_autostart "0"

// Enable Spectator Hltv Replay when killed by bot.
// Default: 0
spec_replay_bot "0"

// Hltv Replay delay in seconds.
// Default: 5
spec_replay_cam_delay "5"

// Debug options for replay cam.
// Default: 0
spec_replay_cam_options "0"

// The trailing time, in seconds, of replay past the event, including fade-out.
// Default: 2
spec_replay_winddown_time "2"

// See player outlines and name IDs through walls.
// Default: 0
spec_show_xray "1"

// Lurking player xray glow scaling.
// Default: 0.6
spec_glow_silent_factor "0.6"

// Time for noisy player glow 'spike' to show that they made noise very recently.
// Default: 0
spec_glow_spike_time "0"

// Noisy players stay at full brightness for this long.
// Default: 1
spec_glow_full_time "1"

// Time to decay glow from 1.0 to spec_glow_silent_factor after spec_glow_full_time.
// Default: 2
spec_glow_decay_time "2"

// Draws the network usage data.
// Default: 0
//
// 0: Disabled
// 1: Show network data.
// 2: Show in/out data.
// 3: Draw data on payload.
net_graph "1"

// Draw text fields.
// Default: 1
//
// <*> The graph will appear via a script. Remove the script and set value to '1' for permanent graph.
net_graphtext "0"

// Position of the net graph.
// Default: 1
//
// Value '0' and every value above '3' sets the distance from the left border of the screen (depending on resolution).
net_graphpos "2"

// Height of netgraph panel.
// Default: 64
//
// Position in pixel from the bottom of the screen.
net_graphheight "0"

// Determines whether netgraph font is proportional.
// Default: 1
//
// 0: Small font.
// 1: Normal font.
net_graphproportionalfont "0"

// Draw the interpolation graph.
// Default: 1
net_graphshowinterp "1"

// Draw the ping/packet loss graph.
// Default: 1
net_graphshowlatency "1"

// Draw the server frame rate graph.
// Default: 0
//
// Enable frame rate of the server.
net_graphshowsvframerate "0"

// Set the net graph solid.
// Default: 1
//
// Enable solid color for graphic, only usable in net_graph 3.
net_graphsolid "1"

// Set the net graph scale.
// Default: 5
net_scale "5"

// The latency graph represents this many milliseconds.
// Default: 400
net_graphmsecs "400"

// Set CPU frequency monitoring interval in seconds.
// Default: 0
cpu_frequency_monitoring "0"

// The percentage of the screen height that is considered safe from overscan.
// Default: 1
//
// Defines the safe zone of the HUD (vertical).
safezoney "1"   

// The percentage of the screen width that is considered safe from overscan.
// Default: 1
//
// Defines the safe zone of the HUD (horizontal).
safezonex "1"